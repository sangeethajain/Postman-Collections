{
	"info": {
		"_postman_id": "d810a616-6ec1-4e3e-98b5-c3aed07edd50",
		"name": "Trello Tests",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "24351305"
	},
	"item": [
		{
			"name": "Create a Dynamic Board",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"const jsonData = pm.response.json();",
							"pm.test(\"Board should be created\", function () {",
							"    ",
							"    pm.expect(jsonData.name).to.eql(pm.environment.get(\"boardName\"));",
							"",
							"    pm.expect(jsonData.closed).to.eql(false);",
							"});",
							"pm.environment.set(\"BoardId\", jsonData.id);",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"let i = pm.environment.get(\"currentBoradNumber\");",
							"if(i){",
							"    i++;",
							"}else{",
							"    i=1;",
							"}",
							"const boardName = \"My Board \"+i;",
							"pm.environment.set(\"boardName\", boardName);",
							"pm.environment.set(\"currentBoradNumber\", i);",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/1/boards/?name={{boardName}}&key={{TrelloAPIKey}}&token={{TrelloToken}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"1",
						"boards",
						""
					],
					"query": [
						{
							"key": "name",
							"value": "{{boardName}}"
						},
						{
							"key": "key",
							"value": "{{TrelloAPIKey}}"
						},
						{
							"key": "token",
							"value": "{{TrelloToken}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create TODO List",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"const jsonData = pm.response.json();",
							"pm.test(\"List should be created\", function () {",
							"    pm.expect(jsonData.name).to.eql(\"TODO\");",
							"});",
							"pm.test(\"List should not be closed\", function () {",
							"    pm.expect(jsonData.closed).to.eql(false);",
							"});",
							"pm.test(\"List should be created inside the board\", function () {",
							"    pm.expect(jsonData.idBoard).to.eql(pm.environment.get(\"BoardId\"));",
							"});",
							"pm.environment.set(\"ListId\", jsonData.id);",
							"// Deleting gloabal variable that dosen't need any more",
							"//pm.globals.unset(\"boardId\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/1/lists?name=TODO&idBoard={{BoardId}}&key={{TrelloAPIKey}}&token={{TrelloToken}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"1",
						"lists"
					],
					"query": [
						{
							"key": "name",
							"value": "TODO"
						},
						{
							"key": "idBoard",
							"value": "{{BoardId}}"
						},
						{
							"key": "key",
							"value": "{{TrelloAPIKey}}"
						},
						{
							"key": "token",
							"value": "{{TrelloToken}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create DONE List",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"const jsonData = pm.response.json();",
							"pm.test(\"List should be created\", function () {",
							"    ",
							"    pm.expect(jsonData.name).to.eql(\"DONE\");",
							"});",
							"pm.test(\"List should not be closed\", function () {",
							"    ",
							"    pm.expect(jsonData.closed).to.eql(false);",
							"});",
							"pm.test(\"List should be in proper board\", function () {",
							"    ",
							"    pm.expect(jsonData.idBoard).to.eql(pm.environment.get(\"BoardId\"));",
							"});",
							"pm.environment.set(\"DoneListId\", jsonData.id);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/1/lists?name=DONE&idBoard={{BoardId}}&key={{TrelloAPIKey}}&token={{TrelloToken}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"1",
						"lists"
					],
					"query": [
						{
							"key": "name",
							"value": "DONE"
						},
						{
							"key": "idBoard",
							"value": "{{BoardId}}"
						},
						{
							"key": "key",
							"value": "{{TrelloAPIKey}}"
						},
						{
							"key": "token",
							"value": "{{TrelloToken}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Card",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"const jsonData = pm.response.json();",
							"pm.test(\"Card should be created\", function () {",
							"    pm.expect(jsonData.name).to.eql(\"Learn Postman\");",
							"});",
							"pm.test(\"Card should not be closed\", function () {",
							"    pm.expect(jsonData.closed).to.eql(false);",
							"});",
							"pm.test(\"Card should inside TODO List\", function () {",
							"    pm.expect(jsonData.idList).to.eql(pm.environment.get(\"ListId\"));",
							"});",
							"pm.test(\"Card should inside My Test Board \", function () {",
							"    pm.expect(jsonData.idBoard).to.eql(pm.environment.get(\"BoardId\"));",
							"});",
							"pm.test(\"Card should not have votes\", function () {",
							"    pm.expect(jsonData.badges.votes).to.eql(0);",
							"});",
							"pm.test(\"Card should not have attachments\", function () {",
							"    pm.expect(jsonData.badges.attachments).to.eql(0);",
							"});",
							"pm.environment.set(\"cardId\", jsonData.id);",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/1/cards?name=Learn Postman&key={{TrelloAPIKey}}&token={{TrelloToken}}&idList={{ListId}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"1",
						"cards"
					],
					"query": [
						{
							"key": "name",
							"value": "Learn Postman"
						},
						{
							"key": "key",
							"value": "{{TrelloAPIKey}}"
						},
						{
							"key": "token",
							"value": "{{TrelloToken}}"
						},
						{
							"key": "idList",
							"value": "{{ListId}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Move Card to DONE List",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Name of the card should be Learn Postman\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.name).to.eql(\"Learn Postman\");",
							"});",
							"pm.test(\"Card should moved to DONE List\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.idList).to.eql(pm.environment.get(\"DoneListId\"));",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/1/cards/:id?key={{TrelloAPIKey}}&token={{TrelloToken}}&idList={{DoneListId}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"1",
						"cards",
						":id"
					],
					"query": [
						{
							"key": "key",
							"value": "{{TrelloAPIKey}}"
						},
						{
							"key": "token",
							"value": "{{TrelloToken}}"
						},
						{
							"key": "idList",
							"value": "{{DoneListId}}"
						}
					],
					"variable": [
						{
							"key": "id",
							"value": "{{cardId}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete Board",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/1/boards/:id?key={{TrelloAPIKey}}&token={{TrelloToken}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"1",
						"boards",
						":id"
					],
					"query": [
						{
							"key": "key",
							"value": "{{TrelloAPIKey}}"
						},
						{
							"key": "token",
							"value": "{{TrelloToken}}"
						}
					],
					"variable": [
						{
							"key": "id",
							"value": "{{BoardId}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get all your boards",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/1/members/me/boards?key={{TrelloAPIKey}}&token={{TrelloToken}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"1",
						"members",
						"me",
						"boards"
					],
					"query": [
						{
							"key": "key",
							"value": "{{TrelloAPIKey}}"
						},
						{
							"key": "token",
							"value": "{{TrelloToken}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Deleted Board",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/1/boards/:id?key={{TrelloAPIKey}}&token={{TrelloToken}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"1",
						"boards",
						":id"
					],
					"query": [
						{
							"key": "key",
							"value": "{{TrelloAPIKey}}"
						},
						{
							"key": "token",
							"value": "{{TrelloToken}}"
						}
					],
					"variable": [
						{
							"key": "id",
							"value": "{{BoardId}}"
						}
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "",
			"type": "string"
		}
	]
}